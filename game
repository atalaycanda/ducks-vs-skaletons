import pygame
import random
from pygame import mixer
from pygame.locals import *


fps = 60
screen_width = 500
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Ducks VS Skaletons (Space Invaders)")
background = pygame.image.load("image/background.png")

pygame.mixer.pre_init(44100, -16, 2, 512)
mixer.init()
pygame.init()
clock = pygame.time.Clock()

font30 = pygame.font.SysFont("MS Sans", 30)
font40 = pygame.font.SysFont("MS Sans", 40)

#sounds
ducksound = pygame.mixer.Sound("image/duck.wav")
oofsound = pygame.mixer.Sound("image/oof.wav")
laser = pygame.mixer.Sound("image/laser.wav")
laser.set_volume(0.25)


#variables
rows = 4
cols = 5
alien_cooldown = 1000
last_alien_shot = pygame.time.get_ticks()
countdown = 3
last_count = pygame.time.get_ticks()
gameover = 0

#colors
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)
green = (0, 255, 0)
blue = (0, 0, 255)

def draw_background():
    screen.blit(background, (0, 0))

#starting text
def draw_text(text, font, text_col, x, y):
    img = font.render(text, True, text_col)
    screen.blit(img, (x, y))

#start spaceship
class Spaceship(pygame.sprite.Sprite):
    def __init__(self, x, y, health):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load("image/skaleton.png")
        self.rect = self.image.get_rect()
        self.rect.center = [x, y]
        self.health_start = health
        self.health_left = health
        self.last_shot = pygame.time.get_ticks()

    def update(self):
        speed = 8
        cooldown = 400
        gameover = 0

        #moving
        key = pygame.key.get_pressed()
        if (key[pygame.K_LEFT] or key[pygame.K_a]) and (self.rect.left > 0):
            self.rect.x -= speed
        if (key[pygame.K_RIGHT] or key[pygame.K_d]) and (self.rect.right < screen_width):
            self.rect.x += speed

        #shooting
        time_now = pygame.time.get_ticks()
        if (key[pygame.K_SPACE] or key[pygame.K_w]) and (time_now - self.last_shot > cooldown):
            laser.play()
            bullet = Bullets(self.rect.centerx, self.rect.top)
            bullet_group.add(bullet)
            self.last_shot = time_now

        #mask
        self.mask = pygame.mask.from_surface(self.image)

        #health bar
        pygame.draw.rect(screen, red, (self.rect.x, (self.rect.bottom + 10), self.rect.width, 15))
        if self.health_left > 0:
            pygame.draw.rect(screen, green, (self.rect.x, (self.rect.bottom + 10), int(self.rect.width * (self.health_left/self.health_start)), 15))
        elif self.health_left <= 0:
            self.kill()
            gameover = -1
        return gameover

#score
score_value = 0
textX = 10
textY  = 10
def show_score(x, y):
    score = font30.render("Score:" + str(score_value), True, (white))
    screen.blit(score, (x, y))


#start bullet
class Bullets(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load("image/bullet.png")
        self.rect = self.image.get_rect()
        self.rect.center = [x, y]

    def update(self):
        self.rect.y -= 5
        if self.rect.bottom < 0:
            self.kill()
        if pygame.sprite.spritecollide(self, alien_group, True):
            self.kill()
            ducksound.play()
        if pygame.sprite.spritecollide(self, alien_group, True):
            score_value += 50

#start aliens random
class Aliens(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load("image/alien" + str(random.randint(1,5)) + ".png")
        self.rect = self.image.get_rect()
        self.rect.center = [x, y]
        self.move_counter = 0
        self.move_direction = 1

    def update(self):
        self.rect.x += self.move_direction
        self.move_counter += 1
        if abs(self.move_counter) > 50:
            self.move_direction *= -1
            self.move_counter *= self.move_direction

#start attack
class Attack(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load("image/attack.png")
        self.rect = self.image.get_rect()
        self.rect.center = [x, y]

    def update(self):
        self.rect.y += 2
        if self.rect.top > screen_height:
            self.kill()
        if pygame.sprite.spritecollide(self, spaceship_group, False, pygame.sprite.collide_mask):
            self.kill()
            oofsound.play()
            spaceship.health_left -= 1



#sprite classes
spaceship_group = pygame.sprite.Group()
bullet_group = pygame.sprite.Group()
alien_group = pygame.sprite.Group()
attack_group = pygame.sprite.Group()

#generate aliens
def create_aliens():
    for row in range(rows):
        for item in range(cols):
            alien = Aliens(80 + item * 85, 100 + row * 70)
            alien_group.add(alien)
create_aliens()

#generate player
spaceship = Spaceship(int(screen_width /2), (screen_height -100), 5)
spaceship_group.add(spaceship)


run = True
while run:
    clock.tick(fps)
    draw_background()
    show_score(textX, textY)

    if countdown == 0:
        time_now = pygame.time.get_ticks()

        if time_now - last_alien_shot > alien_cooldown and len(attack_group) < 5 and len(alien_group) > 0:
            attacking_alien = random.choice(alien_group.sprites())
            alien_bullet = Attack(attacking_alien.rect.centerx, attacking_alien.rect.bottom)
            attack_group.add(alien_bullet)
            last_alien_shot = time_now
            score_value += 50


        #checking remaining aliens
        if len(alien_group) == 0:
            gameover = 1
        if gameover == 0:
            gameover = spaceship.update()
            bullet_group.update()
            alien_group.update()
            attack_group.update()

        else:
            if gameover == -1:
                draw_text("YOU LOST!", font40, white, int(screen_width/2  -85), int(screen_height - 575))
            if gameover == 1:
                draw_text("YOU WIN!", font40, white, int(screen_width/2  -85), int(screen_height - 575))

    if countdown > 0:
        draw_text("DUCKS VS SKALETONS", font40, white, int(screen_width/2  -150), int(screen_height - 575))
        draw_text("A-D and Arrow Keys to Move", font30, white, int(screen_width/2  -140), int(screen_height - 240))
        draw_text("SPACE for Shooting", font30, white, int(screen_width/2  -100), int(screen_height - 210))
        draw_text(str(countdown), font40, white, int(screen_width/2 -7), int(screen_height - 175))
        count_timer = pygame.time.get_ticks()
        if count_timer - last_count > 1000:
            countdown -= 1
            last_count = count_timer


    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False


    spaceship_group.draw(screen)
    bullet_group.draw(screen)
    alien_group.draw(screen)
    attack_group.draw(screen)

    pygame.display.update()

pygame.quit()
